class Solution {
  public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        // Your code here
       vector<pair<vector<int>, long long>> store;

    for (auto& it : points) {
        int x = it[0];
        int y = it[1];
        long long distance = (long long)x * x + (long long)y * y; 
        store.push_back({{x, y}, distance});
    }

    sort(store.begin(), store.end(), [](const pair<vector<int>, long long>& a, const pair<vector<int>, long long>& b) {
        return a.second < b.second;  
    });

    vector<vector<int>> result;
    for (int i = 0; i < k; i++) {
        result.push_back(store[i].first);
    }

    return result;
}
};
